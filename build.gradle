/*
** OKafka Java Client version 0.8.
**
** Copyright (c) 2019, 2020 Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

buildscript {
  repositories {
      mavenCentral()
      jcenter()
  } 
}

allprojects {
  
  repositories {
    mavenCentral()
  }
  
  tasks.withType(Javadoc) {
    // disable the crazy super-strict doclint tool in Java 8
    // noinspection SpellCheckingInspection
    options.addStringOption('Xdoclint:none', '-quiet')
    options.windowTitle = "Oracle Database Transactional Event Queues Java API Reference"
    options.header = """<b>Oracle&reg; Database Transactional Event Queues Java API Reference<br>20c</b><br>F30355-02<br>"""
    options.bottom = """<center><small>Copyright &copy; 2001, 2020, Oracle and/or its affiliates. All rights reserved.<small></center><p><small><br></small></p>"""
  }
 
}

ext {
  gradleVersion = "5.0"
  minJavaVersion = "8"
  
  mavenUrl = project.hasProperty('mavenUrl') ? project.mavenUrl : ''
  mavenUsername = project.hasProperty('mavenUsername') ? project.mavenUsername : ''
  mavenPassword = project.hasProperty('mavenPassword') ? project.mavenPassword : ''

}

subprojects {

 apply plugin : 'java-library'

 sourceCompatibility = minJavaVersion
 targetCompatibility = minJavaVersion
 
 jar {
      from "$rootDir/LICENSE"
      from "$rootDir/NOTICE"
 }     
}

project(':clients') {

    println 'project client'
    
    dependencies {

      // Use JUnit test framework
      //testImplementaion 'junit:junit:4.12'
      compile group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'
      compile group: 'javax.transaction', name: 'jta', version: '1.1'
      compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0'
      compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha0'
      compile group: 'com.oracle.database.messaging', name: 'aqapi', version: '19.3.0.0'
      testImplementation group: 'org.easymock', name: 'easymock', version: '3.6'
      testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.0-beta.5'
      testImplementation group: 'org.powermock', name: 'powermock-api-support', version: '2.0.5'
      testImplementation group: 'org.powermock', name: 'powermock-api-easymock', version: '2.0.0-beta.5'
      compile fileTree(dir: 'libs', include: ['*.jar'])
      
    }
    
    jar {
      description 'Generates okafka client jar without dependencies' 
      baseName = 'okafka'
      version = '0.8'
    }

    javadoc {
      include "**/org/oracle/okafka/clients/admin/*"
      include "**/org/oracle/okafka/clients/consumer/*"
      include "**/org/oracle/okafka/clients/producer/*"
      include "**/org/oracle/okafka/common/*"
      include "**/org/oracle/okafka/common/annotation/*"
      include "**/org/oracle/okafka/common/errors/*"
      include "**/org/oracle/okafka/common/resource/*"
      include "**/org/oracle/okafka/common/serialization/*"
      include "**/org/oracle/okafka/common/config/*"
   }
   
   task fatJar(type: Jar) {
     description 'Generates okafka client jar with all dependencies'
     from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
     with jar
     baseName = 'okafkafat'
     version =  '0.8'
   
  }

}

project(':examples') {

    dependencies {
      compile project(':clients')
    }
    jar {
      description 'Generates a jar containg examples for okafka client demo'
      baseName = 'okafka-examples'
      version = '0.8'
    }
    javadoc {
      enabled = false
    }
}
 
apply plugin: 'java' 
  
configurations {
  childJar
}

dependencies {
  subprojects.each {
    childJar project(it.path)
  }
}

task multiProjectJar (type: Jar,  dependsOn: configurations.childJar) {
  description 'Generates a jar containing okafka client, all its dependencies and examples for okafka demo'
  from { configurations.childJar.collect { zipTree(it) } }
}	  
  
  






